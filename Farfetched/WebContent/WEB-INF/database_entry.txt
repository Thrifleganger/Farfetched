create table emailsubscription(userid int, emailid varchar(255), substatus varchar(2));

create table productbuynow(orderid int, productid int, productname varchar(255), quantity int, unitprice int, totalprice int, fname varchar(255), lname varchar(255), emailid varchar(255), contact varchar(15),
street varchar(255), locality varchar(255), city varchar(255), state varchar(255), pincode varchar(6), paymentconfirm varchar(1),
isshipped varchar(1), orderstatus varchar(1), timeplaced varchar(50), timepaid varchar(50), ordertransaction varchar(255));

create table contactus(name varchar(255),email varchar(255), contact varchar(255), description longtext, time_created varchar(255));

create table bookus(name varchar(255),email varchar(255), contact varchar(255), description longtext, time_created varchar(255));

create table blog_base(blog_id int auto_increment primary key, title varchar(255), description text, type varchar(50), event_date date, venue varchar(50), time varchar(50),
 cover varchar(50), video_link text, audio_link text, image_link text, rsvp text, fav_count int, buy_link text, stars int, date_created datetime, date_approved datetime, 
 facebook text, soundcloud text, youtube text, twitter text, author_name varchar(255), author_email varchar(255), author_visibility varchar(10), blog_visibility varchar(10), status varchar(20))

create table image_base(image_id int auto_increment primary key, image_type varchar(10), image_siz varchar(20), image_location varchar(255), filename varchar(255), image_size varchar(20), 
image longblob, blog_id int, foreign key (blog_id) references blog_base(blog_id));

create table link_base(link_id int auto_increment primary key, link text, domain varchar(50), type varchar(20), blog_id int, foreign key (blog_id) references blog_base(blog_id));

alter table image_base auto_increment=1000;

alter table link_base auto_increment=1000;

alter table blog_base auto_increment=1000;

SELECT T.BLOG_ID, GROUP_CONCAT(T.LINK), GROUP_CONCAT(T.TYPE) FROM (SELECT DISTINCT BLOG_BASE.BLOG_ID, BLOG_BASE.TITLE, BLOG_BASE.DESCRIPTION,
BLOG_BASE.TYPE, BLOG_BASE.EVENT_DATE, BLOG_BASE.VENUE,  LINK_BASE.LINK, LINK_BASE.TYPE FROM BLOG_BASE,LINK_BASE WHERE BLOG_BASE.BLOG_ID = LINK_BASE.BLOG_ID) AS T GROUP BY T.BLOG_ID;


